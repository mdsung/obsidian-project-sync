[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "obsidian-project-sync"
version = "0.1.0"
description = "Bidirectional synchronization between local project notes and Obsidian vault"
authors = [
    { name = "MinDong Sung", email = "mdskylover@gmail.com" }
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.8.1"
keywords = ["obsidian", "sync", "notes", "project-management", "documentation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Documentation",
    "Topic :: Office/Business :: Groupware",
    "Topic :: Software Development :: Documentation",
    "Topic :: Text Processing :: Markup :: Markdown",
]

dependencies = [
    "requests>=2.28.0",
    "pyyaml>=6.0",
    "python-dotenv>=1.0.0",
    "click>=8.0.0",
    "pathlib2>=2.3.0; python_version<'3.4'",
    "watchdog>=3.0.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]


notifications = [
    "slack-sdk>=3.20.0",
    "discord-webhook>=1.0.0",
]

all = [
    "obsidian-project-sync[dev,notifications]"
]

[project.urls]
"Homepage" = "https://github.com/mindong-sung/obsidian-project-sync"
"Bug Tracker" = "https://github.com/mindong-sung/obsidian-project-sync/issues"
"Documentation" = "https://github.com/mindong-sung/obsidian-project-sync#readme"
"Source" = "https://github.com/mindong-sung/obsidian-project-sync"

[project.scripts]
obsidian-sync = "obsidian_project_sync.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["obsidian_project_sync"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=obsidian_project_sync --cov-report=term-missing"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["obsidian_project_sync"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]